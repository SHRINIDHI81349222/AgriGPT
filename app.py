from flask import Flask, render_template, request, redirect, url_for, session, send_file
from flask_session import Session
from gtts import gTTS
import os
from datetime import datetime
from multi_agent_system import run_agents
from deep_translator import GoogleTranslator

app = Flask(__name__)
app.secret_key = 'super_secret_key'
app.config['SESSION_TYPE'] = 'filesystem'
Session(app)

# Translations
translations = {
    'en': {
        'title': "Register", 'name': "Name", 'email': "Email", 'password': "Password",
        'location': "Location", 'land_size': "Farm Size (in acres)", 'crop': "Preferred Crop",
        'register': "Register", 'login_link': "Already have an account? Login", 'login': "Login",
        'home_welcome': "Welcome", 'logout': "Logout",
        'ask_title': "Ask AgriGPT", 'back_home': "Back to Home",
        'ask_input_label': "Type your question:", 'ask_placeholder': "e.g., What crop should I grow in dry soil?",
        'btn_crop': "Best crop for me?", 'btn_irrigation': "Is irrigation needed?",
        'btn_market': "Market prices now?", 'btn_sustainability': "Am I eco-friendly?",
        'submit_btn': "Submit Question", 'thinking': "AgriGPT is analyzing your question...",
        'agrigpt_says': "AgriGPT Says:", 'waiting': "Waiting for your question..."
    },
    'ta': {
        'title': "рокродро┐ро╡рпБ", 'name': "рокрпЖропро░рпН", 'email': "рооро┐ройрпНройроЮрпНроЪро▓рпН", 'password': "роХроЯро╡рпБроЪрпНроЪрпКро▓рпН",
        'location': "роЗроЯроорпН", 'land_size': "рокрогрпНрогрпИ роЕро│ро╡рпБ (роПроХрпНроХро░рпН)", 'crop': "ро╡ро┐ро░рпБрокрпНрокрооро╛рой рокропро┐ро░рпН",
        'register': "рокродро┐ро╡рпБроЪрпЖропрпНропро╡рпБроорпН", 'login_link': "роПро▒рпНроХройро╡рпЗ роХрогроХрпНроХрпБ роЙро│рпНро│родро╛? роЙро│рпНроирпБро┤рпИроХ", 'login': "роЙро│рпНроирпБро┤рпИ",
        'home_welcome': "ро╡ро░ро╡рпЗро▒рпНрокрпБ", 'logout': "ро╡рпЖро│ро┐ропрпЗро▒рпБ",
        'ask_title': "роЕроХрпНро░ро┐GPT-ропрпИроХрпН роХрпЗро│рпБроЩрпНроХро│рпН", 'back_home': "роорпБроХрокрпНрокрпБроХрпНроХрпБ родро┐ро░рпБроорпНрокрпБ",
        'ask_input_label': "роЙроЩрпНроХро│рпН роХрпЗро│рпНро╡ро┐ропрпИ роЙро│рпНро│ро┐роЯро╡рпБроорпН:",
        'ask_placeholder': "роЙродро╛ро░рогроорпН: роЙро▓ро░рпНроирпНрод роорогрпНрогро┐ро▓рпН роОройрпНрой рокропро┐ро░рпН ро╡ро┐родрпИроХрпНроХро▓ро╛роорпН?",
        'btn_crop': "роОройроХрпНроХрпБ роПро▒рпНро▒ рокропро┐ро░рпН?", 'btn_irrigation': "роирпАро░рпНрокрпНрокро╛роЪройроорпН родрпЗро╡рпИродро╛ройро╛?",
        'btn_market': "роЪроирпНродрпИ ро╡ро┐ро▓рпИ роОройрпНрой?", 'btn_sustainability': "роиро╛ройрпН рокроЪрпБроорпИропро╛роХ роЗро░рпБроХрпНроХро┐ро▒рпЗройро╛?",
        'submit_btn': "роХрпЗро│рпНро╡ро┐ропрпИ роЪрооро░рпНрокрпНрокро┐роХрпНроХро╡рпБроорпН",
        'thinking': "роЕроХрпНро░ро┐GPT роЙроЩрпНроХро│рпН роХрпЗро│рпНро╡ро┐ропрпИ рокроХрпБрокрпНрокро╛ропрпНро╡рпБ роЪрпЖропрпНроХро┐ро▒родрпБ...",
        'agrigpt_says': "роЕроХрпНро░ро┐GPT роЪрпКро▓рпНроХро┐ро▒родрпБ:",
        'waiting': "родропро╡рпБ роЪрпЖропрпНродрпБ роЙроЩрпНроХро│рпН роХрпЗро│рпНро╡ро┐ропрпИ роЙро│рпНро│ро┐роЯро╡рпБроорпН..."
    }
}

@app.context_processor
def inject_lang():
    lang = session.get('language', 'en')
    return dict(text=translations.get(lang, translations['en']), language=lang)

@app.route('/')
def splash():
    return render_template('splash.html')

@app.route('/language', methods=['GET', 'POST'])
def language():
    if request.method == 'POST':
        session['language'] = request.form.get('language')
        return redirect(url_for('register'))
    return render_template('language.html')

@app.route('/register', methods=['GET', 'POST'])
def register():
    if request.method == 'POST':
        session['user'] = {
            'name': request.form['name'],
            'email': request.form['email'],
            'location': request.form['location'],
            'land_size': request.form['land_size'],
            'crop_type': request.form['crop']
        }
        return redirect(url_for('home'))
    return render_template('register.html')

@app.route('/login', methods=['GET', 'POST'])
def login():
    if request.method == 'POST':
        session['user'] = {
            'name': request.form['name'],
            'location': request.form.get('location', ''),
            'crop_type': request.form.get('crop_type', ''),
            'land_size': request.form.get('land_size', '')
        }
        return redirect(url_for('home'))
    return render_template('login.html')

@app.route('/home')
def home():
    if 'user' not in session:
        return redirect(url_for('login'))
    return render_template('home.html', user=session['user'], language=session.get('language', 'en'))

@app.route('/ask', methods=['GET', 'POST'])
def ask():
    if 'user' not in session:
        return redirect(url_for('login'))

    user = session['user']
    language = session.get('language', 'en')
    response = None

    if request.method == 'POST':
        query = request.form.get('query') or request.form.get('custom_query', '').strip()

        if not query:
            response = "тЭМ Please enter a valid question." if language == 'en' else "тЭМ родропро╡рпБроЪрпЖропрпНродрпБ роТро░рпБ роЪро░ро┐ропро╛рой роХрпЗро│рпНро╡ро┐ропрпИ роЙро│рпНро│ро┐роЯро╡рпБроорпН."
        else:
            # Translate Tamil input to English
            if language == 'ta':
                query_translated = GoogleTranslator(source='ta', target='en').translate(query)
                prompt = f"Please answer this question clearly:\n{query_translated}"
            else:
                prompt = query

            # Run the agents
            ai_response = run_agents(prompt, user_data=user)

            # Translate back to Tamil
            if language == 'ta':
                try:
                    response = GoogleTranslator(source='en', target='ta').translate(ai_response)
                except Exception as e:
                    response = "тЪая╕П рокродро┐ро▓рпИ родрооро┐ро┤ро┐ро▓рпН роорпКро┤ро┐рокрпЖропро░рпНроХрпНроХ роорпБроЯро┐ропро╡ро┐ро▓рпНро▓рпИ."
            else:
                response = ai_response

    return render_template("ask.html", language=language, text=translations.get(language, {}), user=user, response=response)

@app.route('/market')
def market():
    if 'user' not in session:
        return redirect(url_for('login'))

    language = session.get('language', 'en')

    trends = [
        {
            "name_en": "Tomato",
            "name_ta": "родроХрпНроХро╛ро│ро┐",
            "price": "тВ╣120/kg",
            "trend": "ЁЯФ║ Rising (30% increase)",
            "region": "Tamil Nadu, Karnataka",
            "advice_en": "Tomato prices are soaring due to rainfall impact. Consider planning for next monsoon.",
            "advice_ta": "рооро┤рпИ роХро╛ро░рогрооро╛роХ ро╡ро┐ро▓рпИ роЙропро░рпНроирпНродрпБро│рпНро│родрпБ. роЕроЯрпБродрпНрод рокро░рпБро╡родрпНродро┐ро▒рпНроХрпБ роЪро╛роХрпБрокроЯро┐ родро┐роЯрпНроЯрооро┐роЯрпБроЩрпНроХро│рпН."
        },
        {
            "name_en": "Onion",
            "name_ta": "ро╡рпЖроЩрпНроХро╛ропроорпН",
            "price": "тВ╣95/kg",
            "trend": "ЁЯФ║ High demand",
            "region": "Maharashtra, Tamil Nadu",
            "advice_en": "Shortage expected during festival season. High profit potential.",
            "advice_ta": "родро┐ро░рпБро╡ро┐ро┤ро╛ роХро╛ро▓родрпНродро┐ро▓рпН рокро▒рпНро▒ро╛роХрпНроХрпБро▒рпИ. роиро▓рпНро▓ ро▓ро╛рок ро╡ро╛ропрпНрокрпНрокрпБ."
        },
        {
            "name_en": "Banana",
            "name_ta": "ро╡ро╛ро┤рпИ",
            "price": "тВ╣60тАУтВ╣70/kg",
            "trend": "тЮб Stable but in demand",
            "region": "Kerala, TN",
            "advice_en": "Steady export demand. Suitable for small-scale farmers too.",
            "advice_ta": "роиро┐ро░роирпНродро░ роПро▒рпНро▒рпБроородро┐ родрпЗро╡рпИ. роЪро┐ро▒рпБ роиро┐ро▓родрпНродро┐ро▒рпНроХрпБроорпН роПро▒рпНро▒родрпБ."
        },
        {
            "name_en": "Green Chili",
            "name_ta": "рокроЪрпНроЪрпИ рооро┐ро│роХро╛ропрпН",
            "price": "тВ╣140/kg",
            "trend": "ЁЯФ║ Sharp increase",
            "region": "Andhra Pradesh, TN",
            "advice_en": "Consider intercrop options as price is rising sharply.",
            "advice_ta": "роЙро░рпБрогрпНроЯрпБ рокропро┐ро░ро╛роХ роЪрпЗро░рпНродрпНродрпБ роЪро╛роХрпБрокроЯро┐ роЪрпЖропрпНропро▓ро╛роорпН."
        },
        {
            "name_en": "Coriander",
            "name_ta": "роХрпКродрпНродрооро▓рпНро▓ро┐",
            "price": "тВ╣80тАУтВ╣100/kg",
            "trend": "ЁЯФ╝ Slightly Rising",
            "region": "All over South India",
            "advice_en": "Fast-growing leafy crop. Ideal during short rains.",
            "advice_ta": "ро╡рпЗроХрооро╛роХ ро╡ро│ро░рпБроорпН. роХрпБро▒рпБроХро┐роп рооро┤рпИроХрпНроХро╛ро▓родрпНродро┐ро▒рпНроХрпБ роПро▒рпНро▒родрпБ."
        }
    ]

    return render_template("market.html", trends=trends, language=language)




@app.route('/speak', methods=['POST'])
def speak():
    text = request.json.get('text', '')
    lang = session.get('language', 'en')

    if not text.strip():
        return "No text", 400

    try:
        filename = f"speech_{datetime.now().timestamp()}.mp3"
        filepath = os.path.join("static", filename)

        # Choose correct language
        tts_lang = 'ta' if lang == 'ta' else 'en'
        tts = gTTS(text=text, lang=tts_lang)
        tts.save(filepath)

        return {'url': url_for('static', filename=filename)}
    except Exception as e:
        return {'error': str(e)}, 500
@app.route('/news')
def news():
    if 'user' not in session:
        return redirect(url_for('login'))

    language = session.get('language', 'en')

    news_items = [
        {
            "title_en": "Tamil Nadu Government Launches e-Vaadagai Portal for Farmers",
            "title_ta": "родрооро┐ро┤рпНроиро╛роЯрпБ роЕро░роЪрпБ ро╡ро┐ро╡роЪро╛ропро┐роХро│рпБроХрпНроХро╛роХ 'роЗ-ро╡ро╛роЯроХрпИ' родро│родрпНродрпИ роЕро▒ро┐роорпБроХроорпН роЪрпЖропрпНроХро┐ро▒родрпБ",
            "summary_en": "Now farmers can rent agri equipment online easily through a mobile portal.",
            "summary_ta": "роЗройро┐ ро╡ро┐ро╡роЪро╛ропро┐роХро│рпН ро╡ро┐ро╡роЪро╛роп роЙрокроХро░рогроЩрпНроХро│рпИ роЖройрпНро▓рпИройро┐ро▓рпН роОро│ро┐родро╛роХ ро╡ро╛роЯроХрпИроХрпНроХрпБ рокрпЖро▒ро▓ро╛роорпН.",
            "source": "https://www.tn.gov.in/",
            "date": "2025-06-12"
        },
        {
            "title_en": "Tomato Prices Surge in Chennai Wholesale Markets",
            "title_ta": "роЪрпЖройрпНройрпИ роорпКродрпНрод роЪроирпНродрпИропро┐ро▓рпН родроХрпНроХро╛ро│ро┐ ро╡ро┐ро▓рпИ роЙропро░рпНро╡рпБ",
            "summary_en": "Tomato prices crossed тВ╣120/kg due to short rainfall this month.",
            "summary_ta": "рооро┤рпИропро┐ро▓рпНро▓ро╛родродро╛ро▓рпН родроХрпНроХро╛ро│ро┐ ро╡ро┐ро▓рпИ тВ╣120/роХро┐ро▓рпЛ роОрой роЙропро░рпНроирпНродрпБро│рпНро│родрпБ.",
            "source": "https://www.thehindu.com/",
            "date": "2025-06-10"
        },
        {
            "title_en": "AI in Agriculture: IIT Madras Launches Smart Farming Pilot",
            "title_ta": "ро╡ро┐ро╡роЪро╛ропродрпНродро┐ро▓рпН роЪрпЖропро▒рпНроХрпИ роирпБрогрпНрогро▒ро┐ро╡рпБ: роРроРроЯро┐ роорпЖроЯрпНро░ро╛ро╕рпН 'ро╕рпНрооро╛ро░рпНроЯрпН' родро┐роЯрпНроЯроорпН",
            "summary_en": "Precision farming technology trialed in Kanchipuram district with drones and sensors.",
            "summary_ta": "роХро╛роЮрпНроЪро┐рокрпБро░роорпН рооро╛ро╡роЯрпНроЯродрпНродро┐ро▓рпН роЯрпНро░рпЛройрпН рооро▒рпНро▒рпБроорпН роЪрпЖройрпНроЪро╛ро░рпН роЙродро╡ро┐ропрпБроЯройрпН роЪрпЛродройрпИ роЪрпЖропрпНроХро┐ро▒родрпБ.",
            "source": "https://www.iitm.ac.in/",
            "date": "2025-06-09"
        },
        {
            "title_en": "New Solar Pump Subsidy Approved for TN Farmers",
            "title_ta": "родрооро┐ро┤рпНроиро╛роЯрпНроЯро┐ро▓рпН ро╡ро┐ро╡роЪро╛ропро┐роХро│рпБроХрпНроХро╛роХ рокрпБродро┐роп роЪрпВро░ро┐роп рокроорпНрокрпН родро│рпНро│рпБрокроЯро┐",
            "summary_en": "Over 10,000 new solar pump sets to be distributed this financial year.",
            "summary_ta": "роЗроирпНрод роиро┐родро┐ропро╛рогрпНроЯро┐ро▓рпН 10,000 роЪрпВро░ро┐роп рокроорпНрокрпНроХро│рпН ро╡ро┤роЩрпНроХ родро┐роЯрпНроЯроорпН.",
            "source": "https://teda.in/",
            "date": "2025-06-08"
        },
        {
            "title_en": "Organic Farming Movement Gains Momentum Among Young Farmers",
            "title_ta": "роЗро│рпИроЮро░рпН ро╡ро┐ро╡роЪро╛ропро┐роХро│ро┐ро▓рпН роЬрзИро╡ ро╡ро┐ро╡роЪро╛ропроорпН роЕродро┐роХро░ро┐роХрпНроХро┐ро▒родрпБ",
            "summary_en": "Awareness and training programs draw more youth into eco-farming.",
            "summary_ta": "ро╡ро┐ро┤ро┐рокрпНрокрпБрогро░рпНро╡рпБ рооро▒рпНро▒рпБроорпН рокропро┐ро▒рпНроЪро┐ропро╛ро▓рпН роЗро│рпИроЮро░рпНроХро│рпН рокроЪрпБроорпИ ро╡ро┐ро╡роЪро╛ропродрпНродро┐ро▓рпН роИроЯрпБрокроЯрпБроХро┐ройрпНро▒ройро░рпН.",
            "source": "https://vikatan.com/",
            "date": "2025-06-06"
        }
    ]

    return render_template("news.html", news_items=news_items, language=language)


@app.route("/eco")
def eco_friendly():
    language = session.get("language", "en")
    user_name = session.get("user", {}).get("name", "Farmer")

    suggestions = [
        {
            "name_en": "Organic Neem Oil Spray",
            "desc_en": "Natural pest control for vegetables and fruits.",
            "use_en": "Spray on leaves to repel insects and fungi.",
            "name_ta": "роЬрпИро╡ ро╡рпЗрокрпНрок роОрогрпНрогрпЖропрпН родрпЖро│ро┐рокрпНрокрпБ",
            "desc_ta": "рокрпВроЪрпНроЪро┐роХро│рпИ роОродро┐ро░рпНроХрпНроХ роЗропро▒рпНроХрпИ родрпАро░рпНро╡рпБ.",
            "use_ta": "роЗро▓рпИроХро│ро┐ро▓рпН родрпЖро│ро┐родрпНродрпБ рокрпВроЪрпНроЪро┐роХро│рпИ ро╡ро┐ро░роЯрпНроЯро▓ро╛роорпН.",
            "link": "https://www.amazon.in/s?k=neem+oil+organic+spray"
        },
        {
            "name_en": "Vermicompost Fertilizer",
            "desc_en": "Improves soil structure and fertility using worm compost.",
            "use_en": "Mix with topsoil for healthy root growth.",
            "name_ta": "роирогрпНроЯрпБ роЙро░роорпН",
            "desc_ta": "роорогрпНрогрпИ роЪрпЖро▒ро┐ро╡рпВроЯрпНроЯрпБроорпН рокроЪрпБроорпИропро╛рой роЙро░роорпН.",
            "use_ta": "роорогрпНрогрпБроЯройрпН роХро▓роирпНродрпБ рокропро┐ро░рпНроХро│рпБроХрпНроХрпБ ро╡рпЗро░рпНро╡ро┐ро░рпБродрпНродро┐.",
            "link": "https://www.amazon.in/s?k=vermicompost"
        },
        {
            "name_en": "Bio Enzyme Cleaner (For Soil)",
            "desc_en": "Eco-alternative to chemical inputs, promotes soil microbes.",
            "use_en": "Dilute and spray weekly for enriched soil.",
            "name_ta": "рокропрпЛ роОройрпНроЪрпИроорпН роЙро░роорпН",
            "desc_ta": "роорогрпНрогрпБроХрпНроХро╛рой роЙропро┐ро░рогрпБ ро╡ро│ро░рпНрокрпНрокрпБ роКроЯрпНроЯроЪрпНроЪродрпНродрпБ.",
            "use_ta": "роКро▒ ро╡рпИродрпНродрпБ ро╡ро╛ро░роорпН роТро░рпБроорпБро▒рпИ родрпЖро│ро┐роХрпНроХро╡рпБроорпН.",
            "link": "https://www.amazon.in/s?k=bio+enzyme+for+soil"
        },
        {
            "name_en": "Cocopeat Blocks",
            "desc_en": "Retains water and supports seed germination.",
            "use_en": "Ideal for nurseries and polyhouse farming.",
            "name_ta": "родрпЖройрпНройроЩрпНроХрпКроЯрпНроЯрпИрокрпН рокрпВроЪро┐",
            "desc_ta": "роирпАро░рпИ рокро░ро╛рооро░ро┐роХрпНроХрпБроорпН. ро╡ро┐родрпИ ро╡ро│ро░рпНроХрпНроХ роЙродро╡рпБроорпН.",
            "use_ta": "роиро░рпНроЪро░ро┐ рооро▒рпНро▒рпБроорпН ро╣рпИроЯрпНро░рпЛрокрпЛройро┐роХрпНроХро┐ро▓рпН рокропройрпНрокроЯрпБродрпНродро▓ро╛роорпН.",
            "link": "https://www.amazon.in/s?k=cocopeat+block"
        },
        {
            "name_en": "Cow Dung Cakes",
            "desc_en": "Traditional organic fertilizer rich in nutrients.",
            "use_en": "Dry and mix with field soil once a month.",
            "name_ta": "рооро╛роЯрпНроЯрпБрокрпНрокро╛рогрпИ роЙро░роорпН",
            "desc_ta": "рооро┐роХрпБроирпНрод роКроЯрпНроЯроЪрпНроЪродрпНродрпБ роХрпКрогрпНроЯ рокро╛ро░роорпНрокро░ро┐роп роЙро░роорпН.",
            "use_ta": "роорогро▓ро┐ро▓рпН роХро▓роирпНродрпБ рооро╛родроорпН роТро░рпБроорпБро▒рпИ рокропройрпНрокроЯрпБродрпНродро▓ро╛роорпН.",
            "link": "https://www.amazon.in/s?k=cow+dung+cakes"
        },
        {
            "name_en": "Mulching Film Sheet",
            "desc_en": "Reduces water loss and controls weeds.",
            "use_en": "Spread on field before sowing.",
            "name_ta": "рооро▓рпНроЪро┐роЩрпН ро╖рпАроЯрпН",
            "desc_ta": "роирпАро░рпН роЗро┤рокрпНрокрпИ роХрпБро▒рпИроХрпНроХрпБроорпН, роХро│рпИропрпИ роХроЯрпНроЯрпБрокрпНрокроЯрпБродрпНродрпБроорпН.",
            "use_ta": "ро╡ро┐родрпИ ро╡ро┐родрпИроХрпНроХрпБроорпБройрпН родро░рпИропро┐ро▓рпН ро╡ро┐ро░ро┐роХрпНроХро╡рпБроорпН.",
            "link": "https://www.amazon.in/s?k=mulching+sheet"
        }
    ]

    return render_template("eco.html", suggestions=suggestions, user_name=user_name, language=language)

@app.route('/schemes')
def schemes():
    if 'user' not in session:
        return redirect(url_for('login'))

    language = session.get('language', 'en')

    schemes = [
        {
            "title_en": "PM-KISAN (Income Support)",
            "title_ta": "рокро┐ро░родрооро░рпН роХро┐роЪро╛ройрпН (ро╡ро░рпБрооро╛рой роЙродро╡ро┐)",
            "desc_en": "Provides тВ╣6,000 per year to small and marginal farmers in 3 installments.",
            "desc_ta": "роЪро┐ро▒рпБ ро╡ро┐ро╡роЪро╛ропро┐роХро│рпБроХрпНроХрпБ роЖрогрпНроЯрпБроХрпНроХрпБ тВ╣6,000 ро╡ро░рпИ роорпБроорпНроорпБро▒рпИропро╛роХ ро╡ро┤роЩрпНроХрокрпНрокроЯрпБроХро┐ро▒родрпБ.",
            "scope": "National",
            "link": "https://pmkisan.gov.in/"
        },
        {
            "title_en": "Soil Health Card Scheme",
            "title_ta": "роорогрпН роЖро░рпЛроХрпНроХро┐роп роЕроЯрпНроЯрпИ родро┐роЯрпНроЯроорпН",
            "desc_en": "Farmers receive a card showing their soil condition and fertilizer recommendations.",
            "desc_ta": "роорогрпНрогро┐ройрпН роиро┐ро▓рпИ рооро▒рпНро▒рпБроорпН роЙро░ рокро░ро┐роирпНродрпБро░рпИроХро│рпИ ро╡ро┐ро╡роЪро╛ропро┐роХро│рпН рокрпЖро▒рпБроХро┐ройрпНро▒ройро░рпН.",
            "scope": "National",
            "link": "https://soilhealth.dac.gov.in/"
        },
        {
            "title_en": "Rainfed Area Development",
            "title_ta": "рооро┤рпИ роЪро╛ро░рпНроирпНрод рокроХрпБродро┐ роорпЗроорпНрокро╛роЯрпБ",
            "desc_en": "Supports integrated farming in rainfed regions through crop-livestock integration.",
            "desc_ta": "рооро┤рпИ роЪро╛ро░рпНроирпНрод роЗроЯроЩрпНроХро│ро┐ро▓рпН роТро░рпБроЩрпНроХро┐рогрпИроирпНрод ро╡ро┐ро╡роЪро╛ропродрпНродро┐ро▒рпНроХрпБ роЖродро░ро╡рпБ.",
            "scope": "National (specific states)",
            "link": "https://agriinfra.dac.gov.in/"
        },
        {
            "title_en": "Tamil Nadu Free Solar Pump Scheme",
            "title_ta": "родрооро┐ро┤рпНроиро╛роЯрпБ роЪрпВро░ро┐роп ро╡рпЖрокрпНрок рокроорпНрокрпН родро┐роЯрпНроЯроорпН",
            "desc_en": "Subsidized solar-powered irrigation pumps for Tamil Nadu farmers.",
            "desc_ta": "родрооро┐ро┤рпНроиро╛роЯрпНроЯрпБ ро╡ро┐ро╡роЪро╛ропро┐роХро│рпБроХрпНроХро╛роХ роЪрпВро░ро┐роп рокроорпНрокрпБроХро│рпН родро│рпНро│рпБрокроЯро┐ ро╡ро┐ро▓рпИропро┐ро▓рпН ро╡ро┤роЩрпНроХрокрпНрокроЯрпБроорпН.",
            "scope": "Tamil Nadu",
            "link": "https://aed.tn.gov.in/en/schemes/renewal-energy-in-agriculture/chief-ministers-scheme-of-solar-powered-pumpsets/"
        },
        {
            "title_en": "Agriculture Infrastructure Fund (AIF)",
            "title_ta": "ро╡ро┐ро╡роЪро╛роп роЙроЯрпНроХроЯрпНроЯроорпИрокрпНрокрпБ роиро┐родро┐ (AIF)",
            "desc_en": "Offers low-interest loans for setting up agri warehouses, cold chains, etc.",
            "desc_ta": "ро╡ро┐ро╡роЪро╛роп роХрпБро│ро┐ро░рпН роЪрпЗрооро┐рокрпНрокрпБ рооро▒рпНро▒рпБроорпН роХро│роЮрпНроЪро┐роп родро┐роЯрпНроЯроЩрпНроХро│рпБроХрпНроХрпБ ро╡роЯрпНроЯро┐ропро┐ро▓рпНро▓ро╛ роХроЯройрпН ро╡ро┤роЩрпНроХрокрпНрокроЯрпБроорпН.",
            "scope": "National",
            "link": "https://agriinfra.dac.gov.in/"
        }
    ]

    return render_template("schemes.html", schemes=schemes, language=language)


@app.route('/logout')
def logout():
    session.clear()
    return redirect(url_for('login'))

if __name__ == '__main__':
    app.run(debug=True)
